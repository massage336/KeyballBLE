#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <400>;
};

/ {
    combos {
        compatible = "zmk,combos";

        left_click {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
        };

        before {
            bindings = <&mkp MB4>;
            key-positions = <30 31>;
        };

        pre {
            bindings = <&kp LC(Z)>;
            key-positions = <6 7>;
        };

        for {
            bindings = <&kp LC(Y)>;
            key-positions = <8 7>;
        };

        next {
            bindings = <&mkp MB5>;
            key-positions = <31 32>;
        };

        right_click {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
        };

        screen-left {
            bindings = <&none>;
            key-positions = <5 6>;
        };

        desktop-left {
            bindings = <&none>;
            key-positions = <29 30>;
        };

        screen-right {
            bindings = <&none>;
            key-positions = <8 9>;
        };

        desktop-right {
            bindings = <&none>;
            key-positions = <32 33>;
        };

        new-folder {
            bindings = <&none>;
            key-positions = <20 21>;
        };

        show-task {
            bindings = <&shiftclick>;
            key-positions = <17 18>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <6 7 8>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <18 19 20>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <30 31 32>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <17 18 19>;
        };

        close {
            bindings = <&kp LC(W)>;
            key-positions = <20 19 21>;
        };

        left-tab {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <5 6 7>;
        };

        right-tab {
            bindings = <&kp LC(TAB)>;
            key-positions = <7 8 9>;
        };

        yamakakko {
            bindings = <&yamakakko>;
            key-positions = <4 2 3>;
        };

        marukakko {
            bindings = <&marukakko>;
            key-positions = <14 12 13>;
        };

        kagikakko {
            bindings = <&kagikakko>;
            key-positions = <26 25 24>;
        };

        change-folder {
            bindings = <&kp LG(NUMBER_1)>;
            key-positions = <29 30 31>;
        };

        change-chrome {
            bindings = <&kp LG(NUMBER_2)>;
            key-positions = <31 32 33>;
        };

        maru {
            bindings = <&kp RIGHT>;
            key-positions = <13 12>;
        };

        dablekolon {
            bindings = <&kp UP_ARROW>;
            key-positions = <3 2>;
        };

        bikkuri {
            bindings = <&none>;
            key-positions = <1 2>;
        };

        in {
            bindings = <&in>;
            key-positions = <18 7 8>;
        };

        mail {
            bindings = <&mailreset>;
            key-positions = <16 28>;
        };

        word {
            bindings = <&kp LG(NUMBER_3)>;
            key-positions = <3 2 1>;
        };

        excel {
            bindings = <&kp LG(NUMBER_4)>;
            key-positions = <2 1 0>;
        };

        ppt {
            bindings = <&kp LG(NUMBER_5)>;
            key-positions = <25 24 23>;
        };

        pdf {
            bindings = <&kp LG(NUMBER_6)>;
            key-positions = <22 23 24>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <37 13>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <39 13>;
        };

        start {
            bindings = <&kp LC(HOME)>;
            key-positions = <16 13>;
        };

        last {
            bindings = <&kp LC(END)>;
            key-positions = <28 13>;
        };

        pageup {
            bindings = <&kp PAGE_UP>;
            key-positions = <16 17>;
        };

        pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <28 29>;
        };

        question {
            bindings = <&kp LEFT>;
            key-positions = <11 12>;
        };

        windows {
            bindings = <&kp LEFT_GUI>;
            key-positions = <30 32>;
        };

        hyphen {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <25 24>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        kagikakko: kagikakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &kp NUHS &kp ENTER &kp LEFT_ARROW>;
            label = "KAGIKAKKO";
        };

        marukakko: marukakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_8) &kp LS(NUMBER_9) &kp ENTER &kp LEFT_ARROW>;
            label = "MARUKAKKO";
        };

        yamakakko: yamakakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(COMMA) &kp LS(PERIOD) &kp ENTER &kp LEFT_ARROW>;
            label = "YAMAKAKKO";
        };

        Equal: d1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp LS(MINUS) &kp GRAVE>;
            label = "D1";
        };

        mailreset: mailreset {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LC(HOME) &kp LC(V) &kp LS(PAGE_UP) &kp LC(INT_YEN)>;
            label = "MAILRESET";
        };

        sum: sum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp RS(MINUS) &kp S &kp U &kp M &kp LS(NUMBER_8) &kp GRAVE>;
            label = "SUM";
        };

        average: average {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp RS(MINUS) &kp A &kp V &kp E &kp R &kp A &kp G &kp E &kp LS(NUMBER_8) &kp GRAVE>;
            label = "AVERAGE";
        };

        in: in {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp P &kp N2 &kp N2 &kp N2 &kp N3 &kp N3 &kp N3>;
            label = "IN";
        };

        one: one {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_1 &kp GRAVE>;
            label = "ONE";
        };

        hyphen: hyphen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp MINUS &kp GRAVE>;
            label = "HYPHEN";
        };

        two: two {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_2 &kp GRAVE>;
            label = "TWO";
        };

        three: three {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_3 &kp GRAVE>;
            label = "THREE";
        };

        four: four {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_4 &kp GRAVE>;
            label = "FOUR";
        };

        five: five {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_5 &kp GRAVE>;
            label = "FIVE";
        };

        six: six {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_6 &kp GRAVE>;
            label = "SIX";
        };

        seven: seven {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_7 &kp GRAVE>;
            label = "SEVEN";
        };

        eight: eight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_8 &kp GRAVE>;
            label = "EIGHT";
        };

        nine: nine {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_9 &kp GRAVE>;
            label = "NINE";
        };

        zero: zero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp KP_NUMBER_0 &kp GRAVE>;
            label = "ZERO";
        };

        plus: plus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp LS(SEMI) &kp GRAVE>;
            label = "PLUS";
        };

        minus: minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp MINUS &kp GRAVE>;
            label = "MINUS";
        };

        multiply: multiply {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp LS(SINGLE_QUOTE) &kp GRAVE>;
            label = "MULTIPLY";
        };

        division: division {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp SLASH &kp GRAVE>;
            label = "DIVISION";
        };

        period: period {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp PERIOD &kp GRAVE>;
            label = "PERIOD";
        };

        conma: conma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp COMMA &kp GRAVE>;
            label = "CONMA";
        };

        percent: percent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp PERCENT &kp GRAVE>;
            label = "PERCENT";
        };

        yen: yen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp INTERNATIONAL_3 &kp GRAVE>;
            label = "YEN";
        };

        leftnumkakko: leftnumkakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt GRAVE &kp LS(NUMBER_8) &kp GRAVE>;
            label = "LEFTNUMKAKKO";
        };

        rightnumkakko: rightnumkakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt GRAVE &kp LS(NUMBER_9) &kp GRAVE>;
            label = "RIGHTNUMKAKKO";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };

        shiftclick: shiftclick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT &mkp LCLK>;
            label = "SHIFTCLICK";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 8 Q           &kp W            &kp E                  &kp R          &kp T                                                                &kp Y                 &kp U    &kp I      &kp O    &lt 4 P
&kp A             &kp S            &kp D                  &lt 6 F        &kp G        &kp PRINTSCREEN                       &kp SLASH         &kp H                 &lt 5 J  &kp K      &kp L    &kp MINUS
&kp Z             &kp X            &kp C                  &kp V          &kp B        &mt LEFT_CONTROL INTERNATIONAL_4      &kp SINGLE_QUOTE  &kp N                 &kp M    &kp COMMA  &kp DOT  &mt RIGHT_SHIFT LS(EQUAL)
&kp LS(NUMBER_1)  &mt LEFT_ALT F4  &lt 3 INTERNATIONAL_5  &kp BACKSPACE  &lt 2 SPACE  &kp DELETE                            &lt 1 TAB         &mt LEFT_SHIFT ENTER                               &mt LEFT_CONTROL LS(SLASH)
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&kp TAB  &kp LS(TAB)  &kp LS(LC(SEMI))  &kp LC(L)          &kp LC(E)                                                &kp F7  &kp F8  &kp F9  &kp F10  &none
&none    &none        &none             &kp LS(LC(COMMA))  &kp LS(LC(PERIOD))  &kp C_MUTE      &kp INTERNATIONAL_4  &kp F4  &kp F5  &kp F6  &kp F11  &none
&none    &none        &none             &none              &none               &kp ESCAPE      &kp INTERNATIONAL_5  &kp F1  &kp F2  &kp F3  &kp F12  &none
&none    &none        &none             &trans             &trans              &trans          &trans               &trans                           &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&kp LA(LC(S))  &kp LC(LA(Q))  &sum      &minus         &plus                                         &conma   &seven  &eight  &nine   &percent
&kp LA(LC(C))  &none          &average  &leftnumkakko  &rightnumkakko  &kp KP_NUMLOCK      &Equal    &zero    &four   &five   &six    &yen
&kp LA(LC(I))  &none          &none     &division      &multiply       &kp F2              &percent  &period  &one    &two    &three  &to 0
&kp LA(LC(D))  &none          &none     &trans         &trans          &trans              &trans    &trans                           &to 2
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT_ARROW>;
        };

        symbol {
            bindings = <
&kp LS(NUMBER_1)        &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(COMMA)      &kp LS(PERIOD)                                             &kp COMMA     &kp N7        &kp NUMBER_8  &kp N9        &none
&kp LS(NUMBER_4)        &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)   &kp LS(NUMBER_9)  &kp ESCAPE      &hyphen                  &kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none
&mt LEFT_SHIFT INT_YEN  &kp RS(LBRC)      &kp LS(INT_YEN)   &kp RIGHT_BRACKET  &kp NUHS          &kp ESCAPE      &kp LS(INTERNATIONAL_1)  &kp PERIOD    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none
&kp LEFT_CONTROL        &kp SEMICOLON     &kp LEFT_BRACKET  &trans             &trans            &trans          &trans                   &trans                                                  &none
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT_ARROW)>;
        };

        MOUSE {
            bindings = <
&kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)                           &none   &none      &mkp MCLK  &none      &none
&none             &none             &none             &none             &kp LG(NUMBER_6)  &none            &none   &none   &mkp LCLK  &none      &mkp RCLK  &none
&none             &none             &none             &none             &none             &kp LG(TAB)      &none   &none   &mkp MB4   &none      &mkp MB5   &none
&none             &none             &none             &trans            &trans            &trans           &trans  &trans                                   &none
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        SCROLL {
            bindings = <
&kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)                                   &none  &none             &kp LG(LEFT_ARROW)      &kp LG(RIGHT)      &kp LA(LC(S))
&none             &none             &none             &none             &kp LG(NUMBER_6)  &none             &none          &none  &none             &kp LG(TAB)             &kp LG(E)          &kp LA(LC(C))
&none             &none             &none             &none             &none             &kp UP_ARROW      &kp LC(LA(Q))  &none  &kp LEFT_CONTROL  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT))  &kp LA(LC(I))
&none             &none             &none             &kp LEFT_ARROW    &kp DOWN_ARROW    &kp RIGHT         &none          &none                                                               &kp LA(LC(D))
            >;

            sensor-bindings = <&inc_dec_kp LA(PAGE_DOWN) LA(PAGE_UP)>;
        };

        arrow {
            bindings = <
&none  &none  &none  &none     &none                                    &none  &none  &none  &none  &none
&none  &none  &none  &none     &none           &none             &none  &none  &none  &none  &none  &none
&none  &none  &none  &none     &none           &kp UP_ARROW      &none  &none  &none  &none  &none  &none
&none  &none  &none  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT         &none  &none                       &none
            >;
        };

        layer_8 {
            bindings = <
&none  &none  &none  &none   &none                          &kp LG(LEFT)            &kp LG(UP_ARROW)    &kp LG(RIGHT)      &none  &none
&none  &none  &none  &none   &none   &none       &kp LG(E)  &kp LG(TAB)             &kp LC(S)           &kp LC(W)          &none  &none
&none  &none  &none  &none   &none   &none       &none      &kp LG(LC(LEFT_ARROW))  &kp LG(DOWN_ARROW)  &kp LG(LC(RIGHT))  &none  &none
&none  &none  &none  &trans  &trans  &trans      &trans     &trans                                                                &none
            >;
        };

        layer_6 {
            bindings = <
&none  &none  &none  &none  &none                             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none  &none      &studio_unlock  &none         &none         &none         &none         &none
&none  &none  &none  &none  &none  &none      &bootloader     &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none  &none  &none      &none           &none                                                   &bt BT_CLR_ALL
            >;

            sensor-bindings = <&ROTATE MOVE_X(10) MOVE_X(-10)>;
        };
    };
};
