#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <400>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        left_click {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
        };

        before {
            bindings = <&mkp MB4>;
            key-positions = <30 31>;
        };

        pre {
            bindings = <&kp LC(Z)>;
            key-positions = <6 7>;
        };

        for {
            bindings = <&kp LC(Y)>;
            key-positions = <8 7>;
        };

        next {
            bindings = <&mkp MB5>;
            key-positions = <31 32>;
        };

        right_click {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 Q           &kp W         &kp E                     &kp R                             &kp T                                                             &kp Y      &kp U    &kp I      &kp O    &kp P
&kp A             &kp S         &kp D                     &kp F                             &kp G        &kp PRINTSCREEN                    &kp SLASH         &kp H      &lt 5 J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C                     &kp V                             &kp B        &lt 4 TAB                          &kp SINGLE_QUOTE  &kp N      &kp M    &kp COMMA  &kp DOT  &mt RIGHT_SHIFT LS(SLASH)
&mt LCTRL LC(Z)   &kp LEFT_WIN  &mt LEFT_ALT LC(INT_YEN)  &lt_to_layer_0 2 INTERNATIONAL_4  &lt 3 SPACE  &lt_to_layer_0 1 INT_MUHENKAN      &kp BACKSPACE     &kp ENTER                               &mt RIGHT_CONTROL DEL
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&none  &none  &none  &none   &none                           &kp F1   &kp F2   &kp F3   &kp F4  &kp F5
&none  &none  &none  &none   &none   &kp C_MUTE      &none   &kp F6   &kp F7   &kp F8   &kp F9  &kp F10
&none  &none  &none  &none   &none   &none           &none   &kp F11  &kp F12  &kp F13  &none   &none
&none  &none  &none  &trans  &trans  &trans          &trans  &trans                             &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&kp LS(NUMBER_1)        &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(COMMA)      &kp LS(PERIOD)                                       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PERCENT      &kp RS(SEMICOLON)
&kp LS(NUMBER_4)        &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)   &kp LS(NUMBER_9)  &kp KP_NUMLOCK      &kp LS(MINUS)  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp LANGUAGE_6   &kp KP_NUMBER_0  &kp MINUS
&mt LEFT_SHIFT INT_YEN  &kp RS(LBRC)      &kp LS(INT_YEN)   &kp RIGHT_BRACKET  &kp NUHS          &kp LS(INT_RO)      &kp UP_ARROW   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD       &kp LS(SINGLE_QUOTE)
&kp LEFT_CONTROL        &kp SEMICOLON     &kp LEFT_BRACKET  &trans             &trans            &trans              &trans         &trans                                                              &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT_ARROW>;
        };

        ARROW {
            bindings = <
&kp ESCAPE        &kp LG(NUMBER_1)  &kp LC(LG(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LC(LG(RIGHT))                                   &kp LC(C)  &kp UP_ARROW    &none      &none          &none
&kp LG(NUMBER_5)  &kp LG(NUMBER_2)  &kp LG(LEFT_ARROW)      &kp LG(TAB)         &kp LG(RIGHT)      &kp K_CALCULATOR      &kp LC(S)  &kp LC(X)  &kp LEFT_ARROW  &kp RIGHT  &kp PAGE_UP    &kp HOME
&kp LG(NUMBER_6)  &kp LG(NUMBER_3)  &none                   &kp LG(DOWN_ARROW)  &kp LG(E)          &kp LG(D)             &kp LC(W)  &kp LC(V)  &kp DOWN_ARROW  &none      &kp PAGE_DOWN  &kt END
&kp LG(NUMBER_7)  &kp LG(NUMBER_4)  &none                   &trans              &trans             &trans                &trans     &trans                                               &none
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT_ARROW)>;
        };

        MOUSE {
            bindings = <
&none  &none      &none      &none      &none                            &none     &none      &mkp MCLK  &none     &none
&none  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &none          &none   &mkp MB4  &mkp LCLK  &mkp RCLK  &mkp MB5  &mkp MB5
&none  &none      &none      &none      &none     &mkp RCLK      &none   &none     &none      &none      &none     &none
&none  &none      &none      &trans     &trans    &trans         &trans  &trans                                    &none
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        SCROLL {
            bindings = <
&none  &none  &none  &none  &none                    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none                       &none
            >;

            sensor-bindings = <&inc_dec_kp LA(PAGE_DOWN) LA(PAGE_UP)>;
        };

        layer_6 {
            bindings = <
&none  &none         &none         &none         &none                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none         &none         &none         &none      &none      &studio_unlock  &none         &none         &none         &none         &none
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &none      &bootloader     &none         &none         &none         &none         &bt BT_CLR
&none  &none         &none         &none         &none      &none      &none           &none                                                   &bt BT_CLR_ALL
            >;

            sensor-bindings = <&ROTATE MOVE_X(10) MOVE_X(-10)>;
        };
    };
};
