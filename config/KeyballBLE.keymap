#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <400>;
};

/ {
    combos {
        compatible = "zmk,combos";

        left_click {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
        };

        before {
            bindings = <&mkp MB4>;
            key-positions = <30 31>;
        };

        pre {
            bindings = <&kp LC(Z)>;
            key-positions = <6 7>;
        };

        for {
            bindings = <&kp LC(Y)>;
            key-positions = <8 7>;
        };

        next {
            bindings = <&mkp MB5>;
            key-positions = <31 32>;
        };

        right_click {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
        };

        screen-left {
            bindings = <&kp LG(LEFT)>;
            key-positions = <5 6>;
        };

        desktop-left {
            bindings = <&kp LG(LC(LEFT))>;
            key-positions = <29 30>;
        };

        screen-right {
            bindings = <&kp LG(RIGHT)>;
            key-positions = <8 9>;
        };

        desktop-right {
            bindings = <&kp LG(LC(RIGHT))>;
            key-positions = <32 33>;
        };

        new-folder {
            bindings = <&kp RG(E)>;
            key-positions = <20 21>;
        };

        show-task {
            bindings = <&kp RG(TAB)>;
            key-positions = <17 18>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <6 7 8>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <18 19 20>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <30 31 32>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <17 18 19>;
        };

        close {
            bindings = <&kp LC(W)>;
            key-positions = <20 19 21>;
        };

        left-tab {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <5 6 7>;
        };

        right-tab {
            bindings = <&kp LC(TAB)>;
            key-positions = <7 8 9>;
        };

        yamakakko {
            bindings = <&yamakakko>;
            key-positions = <3 4>;
        };

        marukakko {
            bindings = <&marukakko>;
            key-positions = <14 13>;
        };

        kagikakko {
            bindings = <&kagikakko>;
            key-positions = <25 26>;
        };

        change-folder {
            bindings = <&kp LG(NUMBER_1)>;
            key-positions = <29 30 31>;
        };

        change-chrome {
            bindings = <&kp LG(NUMBER_2)>;
            key-positions = <31 32 33>;
        };

        maru {
            bindings = <&kp SLASH>;
            key-positions = <13 12>;
        };

        dablekolon {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <3 2>;
        };

        bikkuri {
            bindings = <&kp LS(NUMBER_1)>;
            key-positions = <24 25>;
        };

        in {
            bindings = <&in>;
            key-positions = <11 12 13>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        kagikakko: kagikakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &kp NUHS &kp ENTER &kp LEFT_ARROW>;
            label = "KAGIKAKKO";
        };

        marukakko: marukakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_8) &kp LS(NUMBER_9) &kp ENTER &kp LEFT_ARROW>;
            label = "MARUKAKKO";
        };

        yamakakko: yamakakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(COMMA) &kp LS(PERIOD) &kp ENTER &kp LEFT_ARROW>;
            label = "YAMAKAKKO";
        };

        Equal: d1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_MUHENKAN &kp LS(MINUS)>;
            label = "D1";
        };

        mailreset: mailreset {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LC(HOME) &kp LC(V) &kp LS(PAGE_UP) &kp LC(INT_YEN)>;
            label = "MAILRESET";
        };

        sum: sum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(MINUS) &kp S &kp U &kp M &kp LS(NUMBER_8)>;
            label = "SUM";
        };

        average: average {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(MINUS) &kp A &kp V &kp E &kp R &kp A &kp G &kp E &kp LS(NUMBER_8)>;
            label = "AVERAGE";
        };

        in: pass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp P &kp N2 &kp N2 &kp N2 &kp N3 &kp N3 &kp N3>;
            label = "PASS";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_SHIFT TAB  &kp W         &kp E       &kp R                             &kp T                                                     &kp Y      &kp U    &kp I      &kp O    &mt LEFT_ALT MINUS
&kp A               &kp S         &kp D       &kp F                             &kp G        &kp PRINTSCREEN            &kp SINGLE_QUOTE  &kp H      &lt 5 J  &kp K      &lt 4 L  &mt RIGHT_SHIFT P
&mt LEFT_SHIFT Z    &kp X         &kp C       &kp V                             &kp B        &mt LEFT_CONTROL F4        &kp SLASH         &kp N      &kp M    &kp COMMA  &kp DOT  &mt RIGHT_CONTROL LS(SLASH)
&mt LEFT_CONTROL Q  &kp LEFT_WIN  &mailreset  &lt_to_layer_0 2 INTERNATIONAL_5  &lt 3 SPACE  &lt 1 INTERNATIONAL_4      &kp BACKSPACE     &kp ENTER                               &kp DELETE
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&none  &none  &none  &none   &none                           &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &none  &none  &none   &none   &kp C_MUTE      &none   &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &none  &none  &none   &none   &none           &none   &kp F1  &kp F2  &kp F3  &kp F12  &none
&none  &none  &none  &trans  &trans  &trans          &trans  &trans                           &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&none             &kp UP_ARROW    &kp RS(MINUS)  &kp MINUS         &kp LS(SEMI)                                               &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp RS(MINUS)         &kp RS(MINUS)
&none             &none           &sum           &kp LS(NUMBER_8)  &kp LS(NUMBER_9)      &kp KP_NUMLOCK      &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp RS(SEMICOLON)     &kp MINUS
&kp LEFT_SHIFT    &kp DOWN_ARROW  &average       &kp SLASH         &kp RS(SINGLE_QUOTE)  &kp F2              &kp PERIOD       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp RS(SINGLE_QUOTE)  &kp SLASH
&kp LEFT_CONTROL  &none           &none          &trans            &trans                &trans              &trans           &trans                                                                   &kp PERCENT
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT_ARROW>;
        };

        symbol {
            bindings = <
&kp LS(NUMBER_1)        &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(COMMA)      &kp LS(PERIOD)                                 &kp LC(X)  &kp UP_ARROW    &none            &none          &kp BACKSPACE
&kp LS(NUMBER_4)        &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)   &kp LS(NUMBER_9)  &kp ESCAPE        &kp LC(S)  &kp LC(C)  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP    &kp HOME
&mt LEFT_SHIFT INT_YEN  &kp RS(LBRC)      &kp LS(INT_YEN)   &kp RIGHT_BRACKET  &kp NUHS          &kp RS(INT1)      &kp LC(W)  &kp LC(V)  &kp DOWN_ARROW  &none            &kp PAGE_DOWN  &kp END
&kp LEFT_CONTROL        &kp SEMICOLON     &kp LEFT_BRACKET  &trans             &trans            &trans            &trans     &trans                                                     &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT_ARROW)>;
        };

        MOUSE {
            bindings = <
&kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)                           &kp LC(X)  &kp LG(LEFT)  &mkp MCLK  &kp LG(RIGHT)  &kp LC(TAB)
&none             &none             &none             &none             &kp LG(NUMBER_6)  &none            &none   &kp LC(C)  &mkp LCLK     &none      &mkp RCLK      &kp LC(LS(TAB))
&none             &none             &none             &none             &none             &kp LG(TAB)      &none   &kp LC(V)  &mkp MB4      &none      &mkp MB5       &none
&none             &none             &none             &trans            &trans            &trans           &trans  &trans                                             &none
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        SCROLL {
            bindings = <
&kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)                          &none  &none  &none  &none  &kp LC(TAB)
&none             &none             &none             &none             &kp LG(NUMBER_6)  &none            &none  &none  &none  &none  &none  &kp LS(LC(TAB))
&none             &none             &none             &none             &none             &kp LG(TAB)      &none  &none  &none  &none  &none  &none
&none             &none             &none             &none             &none             &none            &none  &none                       &none
            >;

            sensor-bindings = <&inc_dec_kp LA(PAGE_DOWN) LA(PAGE_UP)>;
        };

        layer_6 {
            bindings = <
&none  &none         &none         &none         &none                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none         &none         &none         &none      &none      &studio_unlock  &none         &none         &none         &none         &none
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &none      &bootloader     &none         &none         &none         &none         &bt BT_CLR
&none  &none         &none         &none         &none      &none      &none           &none                                                   &bt BT_CLR_ALL
            >;

            sensor-bindings = <&ROTATE MOVE_X(10) MOVE_X(-10)>;
        };

        ARROW {
            bindings = <
&kp ESCAPE        &kp LG(NUMBER_1)  &kp LC(LG(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LC(LG(RIGHT))                                   &kp LC(X)  &kp UP_ARROW    &none      &kp PAGE_UP    &kp HOME
&kp LG(NUMBER_5)  &kp LG(NUMBER_2)  &kp LG(LEFT_ARROW)      &kp LG(TAB)         &kp LG(RIGHT)      &kp K_CALCULATOR      &kp LC(S)  &kp LC(C)  &kp LEFT_ARROW  &kp RIGHT  &none          &none
&kp LG(NUMBER_6)  &kp LG(NUMBER_3)  &none                   &kp LG(DOWN_ARROW)  &kp LG(E)          &kp LG(D)             &kp LC(W)  &kp LC(V)  &kp DOWN_ARROW  &none      &kp PAGE_DOWN  &kt END
&kp LG(NUMBER_7)  &kp LG(NUMBER_4)  &none                   &trans              &trans             &trans                &trans     &trans                                               &none
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT_ARROW)>;
        };

        layer_7 {
            bindings = <
&kp ESCAPE        &kp LG(NUMBER_1)  &kp LC(LG(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LC(LG(RIGHT))                                   &kp LC(X)  &kp UP_ARROW    &none      &kp PAGE_UP    &kp HOME
&kp LG(NUMBER_5)  &kp LG(NUMBER_2)  &kp LG(LEFT_ARROW)      &kp LG(TAB)         &kp LG(RIGHT)      &kp K_CALCULATOR      &kp LC(S)  &kp LC(C)  &kp LEFT_ARROW  &kp RIGHT  &none          &none
&kp LG(NUMBER_6)  &kp LG(NUMBER_3)  &none                   &kp LG(DOWN_ARROW)  &kp LG(E)          &kp LG(D)             &kp LC(W)  &kp LC(V)  &kp DOWN_ARROW  &none      &kp PAGE_DOWN  &kt END
&kp LG(NUMBER_7)  &kp LG(NUMBER_4)  &none                   &trans              &trans             &trans                &trans     &trans                                               &none
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT_ARROW)>;
        };

        layer_9 {
            bindings = <
&kp LS(NUMBER_1)        &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(COMMA)      &kp LS(PERIOD)                                       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PERCENT      &kp RS(SEMICOLON)
&kp LS(NUMBER_4)        &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)   &kp LS(NUMBER_9)  &kp KP_NUMLOCK      &kp LS(MINUS)  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &kp MINUS
&mt LEFT_SHIFT INT_YEN  &kp RS(LBRC)      &kp LS(INT_YEN)   &kp RIGHT_BRACKET  &kp NUHS          &kp LS(INT_RO)      &kp UP_ARROW   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD       &kp LS(SINGLE_QUOTE)
&kp LEFT_CONTROL        &kp SEMICOLON     &kp LEFT_BRACKET  &trans             &trans            &trans              &trans         &trans                                                              &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT_ARROW>;
        };
    };
};
