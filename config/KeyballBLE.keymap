#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        left_click {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
        };

        right_click {
            bindings = <&mkp RCLK>;
            key-positions = <20 19>;
        };

        back {
            bindings = <&mkp MB4>;
            key-positions = <6 7>;
        };

        next {
            bindings = <&mkp MB5>;
            key-positions = <7 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 Q           &kp W         &kp E             &kp R                             &kp T                                                          &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D             &kp F                             &kp G        &kp PRINTSCREEN                    &kp SLASH      &kp H      &kp J  &kp K      &kp L    &lt 4 MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V                             &kp B        &lt 4 LC(INT_YEN)                  &kt COLON      &kp N      &kp M  &kp COMMA  &kp DOT  &lt 5 LS(PERIOD)
&mt LCTRL LC(Z)   &kp LEFT_WIN  &mt LEFT_ALT TAB  &lt_to_layer_0 2 INTERNATIONAL_4  &lt 3 SPACE  &lt_to_layer_0 1 INT_MUHENKAN      &kp BACKSPACE  &kp ENTER                             &mt LEFT_SHIFT DEL
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                          &kp F1   &kp F2   &kp F3   &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &kp C_MUTE      &trans  &kp F6   &kp F7   &kp F8   &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp F11  &kp F12  &kp F13  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans                             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&kp LS(NUMBER_1)        &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(COMMA)     &kp LS(PERIOD)                                       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PERCENT      &kp RS(SEMICOLON)
&kp LS(NUMBER_4)        &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &trans             &kp LS(MINUS)   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &kp MINUS
&mt LEFT_SHIFT INT_YEN  &kp RS(LBRC)      &kp LS(INT_YEN)   &kp LEFT_BRACKET  &kp NUHS          &kp LS(SLASH)      &kp KP_NUMLOCK  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD       &kp LS(SINGLE_QUOTE)
&kp LEFT_CONTROL        &kp SEMICOLON     &trans            &trans            &trans            &trans             &trans          &trans                                                              &kp SLASH
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &trans  &kp LC(LG(LEFT_ARROW))  &kp LG(E)           &kp LC(LG(RIGHT))                         &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)
&trans      &trans  &kp LG(LEFT_ARROW)      &kp LG(UP_ARROW)    &kp LG(RIGHT)      &kp LG(D)      &trans  &kp LEFT_ARROW    &kp UP_ARROW      &kp RIGHT         &kp PAGE_UP       &kp HOME
&trans      &trans  &kp LC(W)               &kp LG(DOWN_ARROW)  &kp LG(D)          &kp LG(E)      &trans  &trans            &kp DOWN_ARROW    &trans            &kp PAGE_DOWN     &kt END
&trans      &trans  &trans                  &trans              &trans             &trans         &trans  &trans                                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LS(DOWN_ARROW) LS(UP_ARROW)>;
        };

        MOUSE {
            bindings = <
&trans  &trans     &trans     &trans     &trans                           &trans  &trans     &mkp MCLK  &trans    &trans
&trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &mkp LCLK      &trans  &trans  &mkp LCLK  &mkp RCLK  &mkp MB5  &mkp MB5
&trans  &trans     &trans     &trans     &trans    &mkp RCLK      &trans  &trans  &trans     &trans     &trans    &trans
&trans  &trans     &trans     &trans     &trans    &trans         &trans  &trans                                  &trans
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LA(PAGE_DOWN) LA(PAGE_UP)>;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans     &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&ROTATE MOVE_X(10) MOVE_X(-10)>;
        };
    };
};
